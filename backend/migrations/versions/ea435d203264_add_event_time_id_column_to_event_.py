"""add event time id column to event response

Revision ID: ea435d203264
Revises: efbb357e1679
Create Date: 2020-09-30 22:04:43.044618

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy import orm
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.dialects import mysql


# revision identifiers, used by Alembic.
revision = 'ea435d203264'
down_revision = 'efbb357e1679'
branch_labels = None
depends_on = None


Base = declarative_base()

# Define Event class for migration


class Event(Base):
    __tablename__ = 'event'
    __table_args__ = {'extend_existing': True}

    id = sa.Column('id', sa.Integer(), primary_key=True)
    start_time = sa.Column('start_time', sa.BigInteger())
    end_time = sa.Column('end_time', sa.BigInteger())

# Define EventTime class for migration


class EventTime(Base):
    __tablename__ = 'event_time'
    __table_args__ = {'extend_existing': True}

    id = sa.Column('id', sa.Integer(), nullable=False, primary_key=True)
    event_id = sa.Column('event_id', sa.Integer(), nullable=True)
    start_time = sa.Column('start_time', sa.BigInteger(), nullable=True)
    end_time = sa.Column('end_time', sa.BigInteger(), nullable=True)

# Define EventResponse class for migration


class EventResponse(Base):
    __tablename__ = 'event_response'
    __table_args__ = {'extend_existing': True}

    id = sa.Column('id', sa.Integer(), nullable=False, primary_key=True)
    event_id = sa.Column('event_id', sa.Integer(),  index=True, unique=False)
    event_time_id = sa.Column(
        'event_time_id', sa.Integer(), index=True, unique=False)


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('event', 'image_url',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.MEDIUMTEXT(),
               existing_nullable=True)
    op.add_column('event_response', sa.Column('event_time_id', sa.Integer(), nullable=True))
    op.create_index(op.f('ix_event_response_event_time_id'), 'event_response', ['event_time_id'], unique=False)
    # ### end Alembic commands ###
    bind = op.get_bind()
    session = orm.Session(bind=bind)
    session.commit()
    # Data Migration: Set the event time id for each event response#
    event_responses = session.query(EventResponse)
    for event_response in event_responses:
        event_time = session.query(EventTime).filter_by(
            event_id=event_response.event_id).first()
        event_response.event_time_id = event_time.id
        session.add(event_response)
    session.commit()



def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_event_response_event_time_id'), table_name='event_response')
    op.drop_column('event_response', 'event_time_id')
    op.alter_column('event', 'image_url',
               existing_type=mysql.MEDIUMTEXT(),
               type_=mysql.LONGTEXT(),
               existing_nullable=True)
    # ### end Alembic commands ###
